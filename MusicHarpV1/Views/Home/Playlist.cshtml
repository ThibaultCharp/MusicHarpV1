@model PresentationLayer.Models.PlaylistViewModel

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: black;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .left-container {
            width: 20%; /* Adjust as needed */
            float: left;
            margin-right: 5px; /* Add spacing between containers */
            background-color: #121212;
            height: 100%;
            position: fixed;
            border-radius: 10px;
            display: flex; /* Use flexbox */
            flex-direction: column; /* Arrange items in a column */
            justify-content: flex-start; /* Align items at the start (top) of the container */
            align-items: center; /* Center items horizontally */
        }



        .main-container {
            width: 78%; /* Adjust as needed */
            float: right;
            margin right: 10%;
            background-color: #121212;
            border-radius: 10px;
        }

        h1 {
            font-size: 24px;
            margin-bottom: 10px;
            color: white;
        }

        p {
            font-size: 16px;
            color: grey;
        }

        form {
            margin-bottom: 10px;
            background-color: #232323;
        }

        input[type="text"] {
            width: 80%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            margin-bottom: 10px;
            background-color: #232323;
            color: white;
        }

        input[type="submit"] {
            color: #ffffff;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            margin-bottom: 2%;
            background-color: #232323;
        }

        article {
            border: 1px solid black;
            padding: 20px;
            margin-bottom: 10px;
            border-radius: 10px;
            background-color: #232323;
            width: 80%;
            display: flex; /* Use flexbox */
            align-items: center; /* Vertically center items */
            justify-content: space-between; /* Distribute items evenly */
        }

            article:hover {
                background-color: black;
            }


            article p {
                width: 100px;
                overflow: hidden;
                white-space: nowrap;
                text-overflow: ellipsis;
                color: grey;
            }

                article p:hover {
                    width: 200px;
                    overflow: hidden;
                    white-space: nowrap;
                    text-overflow: ellipsis;
                    color: grey;
                }

        .song-info {
            display: flex;
            flex-direction: column;
        }

            .song-info p {
                margin: 0;
            }


        .article_container {
            width: 100%;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }

        img {
            max-width: 100px;
            border-radius: 50%;
            vertical-align: middle;
        }

        .Sidebar_button {
            width: 80%; /* Occupy 80% of the left container's width */
            margin-top: 20px; /* Add top margin */
            padding: 12px; /* Adjust padding */
            text-align: center; /* Center-align the button text */
            text-decoration: none; /* Remove default underline */
            color: white;
            background-color: #555; /* Change button background color */
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: background-color 0.3s ease; /* Smooth transition for background color */
            margin-left: 10px; /* Add some spacing between the button and text */
            margin-right: 10px;
            padding-block-end: 10px;
        }

        .Sidebar_button:hover {
                background-color: #777; /* Darken button background color on hover */
            }

        .Add_to_playlist_btn {
            background-color: grey;
            border-radius: 8px;
            border-width: 0;
            color: black;
            cursor: pointer;
            display: inline-block;
            font-family: "Haas Grot Text R Web", "Helvetica Neue", Helvetica, Arial, sans-serif;
            font-size: 14px;
            font-weight: 500;
            line-height: 20px;
            list-style: none;
            margin: 0;
            padding: 10px 12px;
            text-align: center;
            transition: all 200ms;
            vertical-align: baseline;
            white-space: nowrap;
            user-select: none;
            -webkit-user-select: none;
            touch-action: manipulation;
            margin-bottom: 10px;
            text-decoration: none;
            margin-left: 10px; /* Add some spacing between the button and text */
            margin-right: 10px;
            padding-block-end: 10px;
        }

        .error-message {
            position: fixed; 
            top: 20px;
            right: 20px; 
            background-color: #f44336; 
            color: white;
            padding: 12px 24px; 
            z-index: 1000; 
            border-radius: 4px; 
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); 
        }

        .succes-message{
            position: fixed; 
            top: 20px; 
            right: 20px; 
            background-color: #4CAF50; 
            color: white;
            padding: 12px 24px; 
            z-index: 1000; 
            border-radius: 4px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }



       

    </style>
</head>
<body>
    <div class="left-container">
        <a href="@Url.Action("HomePage")" class="Sidebar_button">Back</a>
    </div>
    <div class="main-container">


        <table>
            <body>

                <div class="article_container">
                    @if (ViewBag.ErrorMessage != null)
                    {
                        <div class="error-message">
                            @ViewBag.ErrorMessage
                        </div>
                    }

                    @if (ViewBag.SuccesDeleteMessage != null)
                    {
                        <div class="succes-message">
                            @ViewBag.SuccesDeleteMessage
                        </div>
                    }

                    @if (ViewBag.SuccesEditMessage != null)
                    {
                        <div class="succes-message">
                            @ViewBag.SuccesEditMessage
                        </div>
                    }
                    <h1>Playlist List</h1>

                    <form asp-action="CreatePlaylist" method="post">
                        <input type="text" name="Name" placeholder="Playlist name">
                        <input type="submit" class="btn btn-outline-dark" value="Create">
                    </form>
                    @foreach (var playlist in Model.PlaylistList)
                    {
                        <article>
                            <p>@playlist.Name</p>
                            <form action="DeletePlaylist" method="post">
                                <input type="hidden" name="id" value="@playlist.Id">
                                <button type="submit" class="Add_to_playlist_btn">Delete</button>
                                <a href="@Url.Action("EditPlaylist", new { id = playlist.Id })" class="Add_to_playlist_btn">Edit</a>
                                <a href="@Url.Action("PlaylistSongs", new { id = playlist.Id })" class="Add_to_playlist_btn">Songs</a>
                            </form>
                        </article>
                    }
                </div>
               
            </body>
        </table>
    </div>
</body>
</html>